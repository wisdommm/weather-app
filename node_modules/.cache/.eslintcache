[{"/Users/wanyan/Desktop/weather-test/src/index.js":"1","/Users/wanyan/Desktop/weather-test/src/App.js":"2","/Users/wanyan/Desktop/weather-test/src/reportWebVitals.js":"3","/Users/wanyan/Desktop/weather-test/src/detail/index.js":"4","/Users/wanyan/Desktop/weather-test/src/image/index.js":"5"},{"size":288,"mtime":1648303878711,"results":"6","hashOfConfig":"7"},{"size":5014,"mtime":1648308333031,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1648303878711,"results":"9","hashOfConfig":"7"},{"size":3186,"mtime":1648303878703,"results":"10","hashOfConfig":"7"},{"size":629,"mtime":1648303878704,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gjz0af",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":2,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/wanyan/Desktop/weather-test/src/index.js",[],[],"/Users/wanyan/Desktop/weather-test/src/App.js",["29","30","31","32","33","34","35"],[],"/Users/wanyan/Desktop/weather-test/src/reportWebVitals.js",[],[],"/Users/wanyan/Desktop/weather-test/src/detail/index.js",["36","37","38","39","40","41","42"],[],"import React from 'react';\nimport Image from '../image/index';\nimport './index.css'\n\nfunction Detail(props) {\n  const {\n    now = {},\n    dayRes = [],\n    hourRes = [],\n    dayMap,\n    weather,\n    setPage,\n  } = props;  \n  return (\n    <div>\n      <img className=\"detail-back\" src={Image.back} onClick={() => setPage(1)} />\n      <img className=\"detail-weather\" src={Image[weather(now.text)]} />\n      <p className=\"detail-position\">\n        <span>浙江省,</span>\n        <span>杭州市</span>\n      </p>\n      <div className=\"detail-temp\">\n        {now.temp || '*'}\n        <span className=\"detail-icon\">°c</span>\n      </div>\n      <div className=\"detail-list\">\n        <ul className=\"detail-tips\">\n          <li\n            className=\"detail-item\"\n            style={{\n              color: 'rgba(101, 142, 217, 1)',\n              background: 'rgba(101, 142, 217, 0.1)',\n            }}\n          >\n            <img className=\"detail-image\" src={Image.nounRain} />\n            <span className=\"detail-tip\">{now.vis}%</span>\n          </li>\n          <li\n            className=\"detail-item\"\n            style={{\n              color: 'rgba(216, 97, 145, 1)',\n              background: 'rgba(216, 97, 145, 0.1)',\n            }}\n          >\n            <img className=\"detail-image\" src={Image.nounHumidity} />\n            <span className=\"detail-tip\">{now.humidity}%</span>\n          </li>\n          <li\n            className=\"detail-item\"\n            style={{\n              color: 'rgba(94, 79, 193, 1)',\n              background: 'rgba(94, 79, 193, 0.1)',\n            }}\n          >\n            <img className=\"detail-image\" src={Image.nounWind} />\n            <span className=\"detail-tip\">{now.windSpeed}km/h</span>\n          </li>\n        </ul>\n      </div>\n      <div className=\"detail-footer\">\n        <img className=\"detail-today\" src={Image.today} />\n        <div className=\"detail-24hour\">\n          {\n            hourRes.map((e) => {\n              return (\n                <div key={e.hour} className=\"detail-timeItem\">\n                  <span className=\"detail-timeTemp\">\n                    {e.temp}\n                    <span className=\"detail-timeIcon\">°c</span>\n                  </span>\n                  <span className=\"detail-timeHour\">{e.hour + (e.hour > 11 ? 'pm' : 'am')}</span>\n                </div>\n              );\n            })\n          }\n        </div>\n        {\n          dayRes.map((day, index) => {\n            const weatherList = ['sun', 'rain', 'cloud', 'overcast'];\n            const days = new Date(day.fxDate).getDay();\n            return (\n              <p key={day.fxDate} className=\"detail-daysItem\">\n                <span className=\"detail-daysDay\">{\n                  dayMap[days]\n                }</span>\n                <img className=\"detail-daysImg\" src={index === 0 ? Image[weather(day.textDay)] : Image[weatherList[Math.floor(Math.random() * 4)]] } />\n                <span className=\"detail-daysTemp\">\n                  {day.tempMax}\n                  <span className=\"detail-daysIcon\">°c</span>\n                </span>\n              </p>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Detail;\n","/Users/wanyan/Desktop/weather-test/src/image/index.js",["43"],[],"import sun from './sun.png';\nimport rain from './rain.png';\nimport snow from './snow.png';\nimport windIcon from './wind-icon.png';\nimport rainIcon from './rain-icon.png';\nimport temIcon from './tem-icon.png';\nimport cloud from './cloud.png';\nimport back from './back.png';\nimport overcast from './overcast.png';\nimport nounRain from './noun-rain.png';\nimport nounWind from './noun-wind.png';\nimport nounHumidity from './noun-humidity.png';\nimport today from './today.png';\n\nexport default {\n  sun,\n  rain,\n  snow,\n  back,\n  cloud,\n  today,\n  overcast,\n  temIcon,\n  windIcon,\n  rainIcon,\n  nounRain,\n  nounWind,\n  nounHumidity,\n};",{"ruleId":"44","severity":1,"message":"45","line":14,"column":13,"nodeType":"46","endLine":26,"endColumn":4},{"ruleId":"47","severity":2,"message":"48","line":32,"column":5,"nodeType":"49","messageId":"50","endLine":32,"endColumn":56},{"ruleId":"47","severity":2,"message":"48","line":33,"column":5,"nodeType":"49","messageId":"50","endLine":33,"endColumn":61},{"ruleId":"51","severity":1,"message":"52","line":92,"column":11,"nodeType":"53","endLine":98,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":116,"column":17,"nodeType":"53","endLine":116,"endColumn":68},{"ruleId":"51","severity":1,"message":"52","line":122,"column":17,"nodeType":"53","endLine":122,"endColumn":75},{"ruleId":"51","severity":1,"message":"52","line":128,"column":17,"nodeType":"53","endLine":128,"endColumn":68},{"ruleId":"51","severity":1,"message":"52","line":16,"column":7,"nodeType":"53","endLine":16,"endColumn":82},{"ruleId":"51","severity":1,"message":"52","line":17,"column":7,"nodeType":"53","endLine":17,"endColumn":72},{"ruleId":"51","severity":1,"message":"52","line":35,"column":13,"nodeType":"53","endLine":35,"endColumn":66},{"ruleId":"51","severity":1,"message":"52","line":45,"column":13,"nodeType":"53","endLine":45,"endColumn":70},{"ruleId":"51","severity":1,"message":"52","line":55,"column":13,"nodeType":"53","endLine":55,"endColumn":66},{"ruleId":"51","severity":1,"message":"52","line":61,"column":9,"nodeType":"53","endLine":61,"endColumn":59},{"ruleId":"51","severity":1,"message":"52","line":86,"column":17,"nodeType":"53","endLine":86,"endColumn":152},{"ruleId":"54","severity":1,"message":"55","line":15,"column":1,"nodeType":"56","endLine":29,"endColumn":3},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]