[{"/Users/wanyan/Desktop/weather-test/src/index.js":"1","/Users/wanyan/Desktop/weather-test/src/App.js":"2","/Users/wanyan/Desktop/weather-test/src/reportWebVitals.js":"3","/Users/wanyan/Desktop/weather-test/src/detail/index.js":"4","/Users/wanyan/Desktop/weather-test/src/image/index.js":"5"},{"size":288,"mtime":1648303878711,"results":"6","hashOfConfig":"7"},{"size":4629,"mtime":1648304090612,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1648303878711,"results":"9","hashOfConfig":"7"},{"size":3186,"mtime":1648303878703,"results":"10","hashOfConfig":"7"},{"size":629,"mtime":1648303878704,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gjz0af",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/wanyan/Desktop/weather-test/src/index.js",[],[],"/Users/wanyan/Desktop/weather-test/src/App.js",["28","29","30","31","32"],[],"import weatherLogo from './image';\nimport Detail from './detail';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nconst dayMap = ['周日','周一','周二','周三','周四','周五','周六',];\n\nfunction App() {\n  const [now, setNow] = useState({});\n  const [hourRes, setHourRes] = useState([]);\n  const [dayRes, setDayRes] = useState([]);\n  const [page, setPage] = useState(1);\n\n  useEffect(async () => {\n    requestWeather();\n    // catch\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('./serviceWorker.js')\n        .then(function (registration) {\n          console.log(registration);\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n    }\n  }, []);\n\n  const requestWeather = async () => {\n    // 当前及24h数据\n    const hour_result = await fetch('https://devapi.qweather.com/v7/weather/now?location=101210106&key=d822b681e139418ea3e02807da626ada').then(data => data.json());\n    if (hour_result.code === '200') {\n      setNow(hour_result.now);\n      const hourList = Array(24).fill(hour_result.now).map((e, index) => {\n        let temp;\n        if (Math.random() < 0.5) {\n          temp = +e.temp + Math.random() * 8;\n        } else {\n          temp = +e.temp - Math.random() * 8;\n        }\n        const hour = new Date(+new Date() + 3600000 * index).getHours();\n        return Object.assign({}, e, {\n          hour,\n          temp: Math.floor(temp)\n        });\n      });\n      setHourRes(hourList);\n    } else {\n      throw new Error('request error');\n    }\n    // 未来7d数据\n    const day_result = await fetch('https://devapi.qweather.com/v7/weather/3d?location=101210106&key=d822b681e139418ea3e02807da626ada').then(data => data.json());\n    if (day_result.code === '200') {\n      let weatherList = day_result.daily;\n      weatherList = weatherList.concat(weatherList, weatherList[0]).map((item, index) => {\n        const time = +new Date() + 86400000 * index;\n        const year = new Date(time).getFullYear();\n        const monuth = new Date(time).getMonth() + 1;\n        const date = new Date(time).getDate();\n        const fxDate = `${year}-${monuth}-${date}`;\n        return Object.assign({}, item, {\n          fxDate,\n        });\n      });\n      setDayRes(weatherList);\n    } else {\n      throw new Error('request error');\n    }\n  };\n  const nowTime = new Date(now.obsTime);\n  const timeText = dayMap[nowTime.getDay()] + ' ' + nowTime.getHours() + (nowTime.getHours() > 12 ? 'pm' : 'am');\n  const weather = (text) => {\n    if (text) {\n      return text.includes('雨') ? 'rain' : \n      now.text?.includes('雪') ? 'snow' : \n      now.text?.includes('晴') ? 'sun' :\n      now.text?.includes('云') ? 'cloud' : 'overcast';\n    }\n    return '';\n  }\n  return (\n    <div className=\"App\">\n      {\n        page === 1 ? <div className=\"container\">\n        <div className=\"content\">\n          <img\n            className=\"weatherLogo\"\n            src={weatherLogo[weather(now.text)]}\n            style={{\n              opacity: now.text ? 1 : 0\n            }}\n          />\n          <div className=\"position\">杭州市, 浙江省</div>\n          <div className=\"description\">\n            <div className=\"wrapper\">\n              <span className=\"temperature\">{now.temp || '*'}<span className=\"icon\">°c</span></span>\n              <span className=\"date\">{now.obsTime ? timeText : '*'}</span>\n            </div>\n            <div className=\"wrapper\">\n              <span className=\"desc1\">{now.windDir}</span>\n              <span className=\"desc1 desc2\">{now.text}</span>\n            </div>\n          </div>\n          <div className=\"detail\" onClick={() => setPage(2)}>详情</div>\n        </div>\n        <div>\n          <ul className=\"tips\">\n            <li className=\"item\">\n              <span>\n                <img className=\"icon\" src={weatherLogo.rainIcon} />降水\n              </span>\n              <span className=\"tip\">{now.vis}%</span>\n            </li>\n            <li className=\"item\">\n              <span>\n                <img className=\"icon temIcon\" src={weatherLogo.temIcon} />湿度\n              </span>\n              <span className=\"tip\">{now.humidity}%</span>\n            </li>\n            <li className=\"item\">\n              <span>\n                <img className=\"icon\" src={weatherLogo.windIcon} />风速\n              </span>\n              <span className=\"tip\">{now.windSpeed}km/h</span>\n            </li>\n          </ul>\n        </div>\n      </div> : <Detail setPage={setPage} hourRes={hourRes} dayMap={dayMap} weather={weather} dayRes={dayRes} now={now} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","/Users/wanyan/Desktop/weather-test/src/reportWebVitals.js",[],[],"/Users/wanyan/Desktop/weather-test/src/detail/index.js",["33","34","35","36","37","38","39"],[],"/Users/wanyan/Desktop/weather-test/src/image/index.js",["40"],[],{"ruleId":"41","severity":1,"message":"42","line":14,"column":13,"nodeType":"43","endLine":26,"endColumn":4},{"ruleId":"44","severity":1,"message":"45","line":85,"column":11,"nodeType":"46","endLine":91,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":109,"column":17,"nodeType":"46","endLine":109,"endColumn":68},{"ruleId":"44","severity":1,"message":"45","line":115,"column":17,"nodeType":"46","endLine":115,"endColumn":75},{"ruleId":"44","severity":1,"message":"45","line":121,"column":17,"nodeType":"46","endLine":121,"endColumn":68},{"ruleId":"44","severity":1,"message":"45","line":16,"column":7,"nodeType":"46","endLine":16,"endColumn":82},{"ruleId":"44","severity":1,"message":"45","line":17,"column":7,"nodeType":"46","endLine":17,"endColumn":72},{"ruleId":"44","severity":1,"message":"45","line":35,"column":13,"nodeType":"46","endLine":35,"endColumn":66},{"ruleId":"44","severity":1,"message":"45","line":45,"column":13,"nodeType":"46","endLine":45,"endColumn":70},{"ruleId":"44","severity":1,"message":"45","line":55,"column":13,"nodeType":"46","endLine":55,"endColumn":66},{"ruleId":"44","severity":1,"message":"45","line":61,"column":9,"nodeType":"46","endLine":61,"endColumn":59},{"ruleId":"44","severity":1,"message":"45","line":86,"column":17,"nodeType":"46","endLine":86,"endColumn":152},{"ruleId":"47","severity":1,"message":"48","line":15,"column":1,"nodeType":"49","endLine":29,"endColumn":3},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]